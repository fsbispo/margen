{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "empty-module:~/utils/auth.server", "../../../app/routes/login.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1722704534019.5444\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { login } from \"~/utils/auth.server\";\nimport { getSession, commitSession } from \"~/sessions\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const password = formData.get(\"password\");\n  try {\n    const token = await login(name, password);\n    const session = await getSession();\n    session.set(\"token\", token);\n    return redirect(\"/home\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session)\n      }\n    });\n  } catch (error) {\n    return json({\n      error: error.message\n    }, {\n      status: 401\n    });\n  }\n};\nexport default function Login() {\n  return <div style={{\n    display: 'flex',\n    height: '100vh'\n  }}>\r\n      {/* Left Section for Company Logo */}\r\n \r\n\r\n      {/* Right Section for Login Form */}\r\n      <div style={{\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px'\n    }}>\r\n        <h1>LOGIN</h1>\r\n        <Form method=\"post\" style={{\n        width: '100%',\n        maxWidth: '400px'\n      }}>\r\n          <div style={{\n          marginBottom: '15px'\n        }}>\r\n            <label htmlFor=\"name\">Nome</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Insira o nome de usu\u00E1rio\" required style={{\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          }} />\r\n          </div>\r\n          <div style={{\n          marginBottom: '15px'\n        }}>\r\n            <label htmlFor=\"password\">Senha</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Insira a senha\" required style={{\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          }} />\r\n          </div>\r\n          <button type=\"submit\" style={{\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px'\n        }}>\r\n            Entrar\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>;\n}\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACqBlB,kBAA+B;AAC/B,kBAAsB;AA0Cd;AA/DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AA8Be,SAAR,QAAyB;AAC9B,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAKI,6DAAC,SAAI,OAAO;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,SAAS;AAAA,EACX,GACI;AAAA,uDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,mDAAC,QAAK,QAAO,QAAO,OAAO;AAAA,MAC3B,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,GACI;AAAA,yDAAC,SAAI,OAAO;AAAA,QACZ,cAAc;AAAA,MAChB,GACI;AAAA,2DAAC,WAAM,SAAQ,QAAO,oBAAtB;AAAA;AAAA;AAAA;AAAA,eAA0B;AAAA,QAC1B,mDAAC,WAAM,MAAK,QAAO,IAAG,QAAO,MAAK,QAAO,aAAY,+BAA2B,UAAQ,MAAC,OAAO;AAAA,UAChG,OAAO;AAAA,UACP,SAAS;AAAA,UACT,WAAW;AAAA,QACb,KAJE;AAAA;AAAA;AAAA;AAAA,eAIC;AAAA,WARH;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC,SAAI,OAAO;AAAA,QACZ,cAAc;AAAA,MAChB,GACI;AAAA,2DAAC,WAAM,SAAQ,YAAW,qBAA1B;AAAA;AAAA;AAAA;AAAA,eAA+B;AAAA,QAC/B,mDAAC,WAAM,MAAK,YAAW,IAAG,YAAW,MAAK,YAAW,aAAY,kBAAiB,UAAQ,MAAC,OAAO;AAAA,UAClG,OAAO;AAAA,UACP,SAAS;AAAA,UACT,WAAW;AAAA,QACb,KAJE;AAAA;AAAA;AAAA;AAAA,eAIC;AAAA,WARH;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC,YAAO,MAAK,UAAS,OAAO;AAAA,QAC7B,OAAO;AAAA,QACP,SAAS;AAAA,QACT,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,cAAc;AAAA,MAChB,GAAG,sBAPD;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAjCF;AAAA;AAAA;AAAA;AAAA,WAkCA;AAAA,OA3CF;AAAA;AAAA;AAAA;AAAA,SA4CA,KApDG;AAAA;AAAA;AAAA;AAAA,SAqDL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
